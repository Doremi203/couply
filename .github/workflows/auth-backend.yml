name: Auth Service CI/CD

on:
  push:
    branches: ["main"]
    paths:
      - 'backend/auth/**'
      - '.github/workflows/backend.yml'
      - '.github/actions/codegen/**'  # Include changes to composite action
  pull_request:
    branches: ["main"]
    paths:
      - 'backend/auth/**'
      - '.github/workflows/backend.yml'
      - '.github/actions/codegen/**'  # Include changes to composite action
  workflow_dispatch: # Allow manual triggering

# Cancel any in-progress job or run for the same branch/PR to save resources
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job for linting the code
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    defaults:
      run:
        working-directory: backend/auth
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/codegen
        with:
          working-directory: backend/auth

      - name: Set up Go
        uses: actions/setup-go@v5.1.0
        with:
          go-version: '1.23.5'
          cache: true

      # Use the official golangci-lint GitHub Action
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64.7
          working-directory: backend/auth
          args: --timeout=3m

  # Job for running tests with coverage
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: backend/auth
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/codegen
        with:
          working-directory: backend/auth

      # Run tests with coverage
      - name: Run tests with coverage
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Download artifact - main test coverage
        id: download-main-breakdown
        uses: dawidd6/action-download-artifact@v9
        with:
          branch: main
          workflow_conclusion: success
          name: main.breakdown.backend.auth
          if_no_artifact_found: warn
          github_token: '${{ github.token }}'

      - name: Check test coverage
        uses: vladopajic/go-test-coverage@v2.13.0
        with:
          profile: coverage.txt
          threshold-total: 15
          source-dir: backend/auth
          breakdown-file-name: ${{ github.ref_name == 'main' && 'main.breakdown.backend.auth' || '' }}
          diff-base-breakdown-file-name: ${{ steps.download-main-breakdown.outputs.found_artifact == 'true' && 'main.breakdown.backend.auth' || '' }}

      - name: upload artifact (main.breakdown)
        uses: actions/upload-artifact@v4
        if: github.ref_name == 'main'
        with:
          name: main.breakdown.backend.auth
          path: main.breakdown.backend.auth
          if-no-files-found: error

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}
          files: ./backend/auth/coverage.txt
          fail_ci_if_error: false
          verbose: true

  # Job for building the application
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: backend/auth
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/codegen
        with:
          working-directory: backend/auth

      # Build with optimized flags
      - name: Build
        run: go build -v -ldflags="-s -w" -o auth_service ./cmd/auth