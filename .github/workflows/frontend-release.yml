name: Frontend Release Flow
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

#      - name: Install Playwright browsers
#        run: npx playwright install
#
#      - name: Run tests
#        run: npm run test-storybook

      - name: Run ESLint
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

  build:
    name: Build Frontend
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Set release version
        run: echo "RELEASE_VERSION=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: List build output
        run: ls -l dist

      - name: Upload build results
        uses: actions/upload-artifact@v4
        with:
          name: frontend_build
          path: dist

  deploy-testing:
    name: Deploy to Testing
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend_build
          path: dist

      - name: Upload to Object Storage
        uses: ./.github/actions/upload-s3
        with:
          build-dir: dist
          s3-bucket: couply-frontend-testing

  publish-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: 
      - deploy-testing
    environment:
      name: Testing
    steps:
      - name: Set release version
        run: echo "RELEASE_VERSION=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release-frontend-v${{ env.RELEASE_VERSION }}
          name: Release Frontend v${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
