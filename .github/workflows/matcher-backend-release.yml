name: Matcher Service Release Flow
on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  codegen:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/codegen
      - name: Upload codegen results
        uses: actions/upload-artifact@v4
        with:
          name: codegen-output
          path: backend

  test:
    needs: codegen
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: backend/matcher
    steps:
      - uses: actions/checkout@v4

      - name: Download codegen results
        uses: actions/download-artifact@v4
        with:
          name: codegen-output
          path: backend

      - name: Run tests
        run: BASE_MIGRATIONS_PATH=${{ github.workspace }}/backend go test ./... -race

      - name: Docker compose
        run: cd .. && docker compose -f docker-compose.tests.yml up -d

      - name: Run functional tests
        run: echo "Running functional tests"

  migrate-testing-up:
    runs-on: ubuntu-latest
    needs:
      - test
    timeout-minutes: 10
    defaults:
      run:
        working-directory: backend/matcher
    steps:
      - uses: actions/checkout@v4

      - name: Download migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.2/migrate.linux-amd64.tar.gz -o migrate.tar.gz
          tar -zxvf migrate.tar.gz
          chmod +x migrate

      - name: Setup yc
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -i /opt/yc -n
          echo '${{ secrets.YC_SERVICE_KEY }}' > sa-key.json
          /opt/yc/bin/yc config set service-account-key sa-key.json
          /opt/yc/bin/yc config set folder-id b1ggapscf0p06cohndtt

      - name: Migrate up
        run: |
          echo "Fetching DB_USER from Yandex Cloud Lockbox..."
          DB_USER=$(/opt/yc/bin/yc lockbox payload get --name testing-db --key db-user)
          DB_PASS=$(/opt/yc/bin/yc lockbox payload get --name testing-db --key db-password)
          
          mkdir -p ~/.postgresql && wget "https://storage.yandexcloud.net/cloud-certs/CA.pem" --output-document ~/.postgresql/root.crt && chmod 0600 ~/.postgresql/root.crt
          
          ./migrate -source file://migrations -database "postgres://$DB_USER:$DB_PASS@${{ vars.TESTING_DB_HOST }}:6432/matcher?sslmode=verify-full&target_session_attrs=read-write&sslrootcert=/home/runner/.postgresql/root.crt" up

  build-testing:
    runs-on: ubuntu-latest
    needs: migrate-testing-up
    timeout-minutes: 20
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4

      - name: Download codegen results
        uses: actions/download-artifact@v4
        with:
          name: codegen-output
          path: backend

      - name: Set release version
        run: echo "RELEASE_VERSION=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Setup yc
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -i /opt/yc -n
          echo '${{ secrets.YC_SERVICE_KEY }}' > sa-key.json
          /opt/yc/bin/yc config set folder-id b1ggapscf0p06cohndtt
          /opt/yc/bin/yc config set service-account-key sa-key.json

      - name: Login docker
        run: |
          echo $(/opt/yc/bin/yc iam create-token)|docker login --username iam --password-stdin cr.yandex

      - name: Build Docker image
        run: docker build -t cr.yandex/crpe9kgeql1v6b7gujfj/matcher-testing:${{ env.RELEASE_VERSION }} --push . -f matcher/testing.Dockerfile

      - name: Generate docker-compose.yml with version
        run: |
          sed -e "s/{{SERVICE_VERSION}}/${{ env.RELEASE_VERSION }}/g" \
              -e "s/{{SERVICE_NAME}}/matcher/g" \
              ${{ github.workspace }}/backend/docker-compose.testing-template.yml \
          > docker-compose.testing-generated.yml

      - name: Deploy to testing
        run: |
          /opt/yc/bin/yc compute instance-group add-metadata --name matcher-testing --metadata-from-file docker-compose=docker-compose.testing-generated.yml


  publish-release:
    runs-on: ubuntu-latest
    needs: build-testing
    environment:
      name: Production
    steps:
      - name: Set release version
        run: echo "RELEASE_VERSION=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release-matcher-v${{ env.RELEASE_VERSION }}
          name: Release Matcher v${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false