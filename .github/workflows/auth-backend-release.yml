name: Auth Service Release Flow
on:
  push:
    tags:
      - 'release-auth-v*'

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    defaults:
      run:
        working-directory: backend/auth
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/codegen
        with:
          working-directory: backend/auth

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64.7
          working-directory: backend/auth
          args: --timeout=3m

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: backend/auth
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/codegen
        with:
          working-directory: backend/auth

      - name: Run tests
        run: MIGRATIONS_PATH=${{ github.workspace }}/backend/auth/migrations go test ./... -race

      - name: Docker compose
        run: cd .. && docker compose -f docker-compose.tests.yml up -d

      - name: Run functional tests
        run: echo "Running functional tests"

  migrate-testing-up:
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
    timeout-minutes: 10
    defaults:
      run:
        working-directory: backend/auth
    steps:
      - uses: actions/checkout@v4

      - name: Download migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.2/migrate.linux-amd64.tar.gz -o migrate.tar.gz
          tar -zxvf migrate.tar.gz
          chmod +x migrate

      - name: Setup yc
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -i /opt/yc -n
          echo '${{ secrets.YC_SERVICE_KEY }}' > sa-key.json
          /opt/yc/bin/yc config set service-account-key sa-key.json
          /opt/yc/bin/yc config set folder-id b1ggapscf0p06cohndtt

      - name: Migrate up
        run: |
          echo "Fetching DB_USER from Yandex Cloud Lockbox..."
          DB_USER=$(/opt/yc/bin/yc lockbox payload get --name testing-db --key user)
          DB_PASS=$(/opt/yc/bin/yc lockbox payload get --name testing-db --key password)
          
          mkdir -p ~/.postgresql && wget "https://storage.yandexcloud.net/cloud-certs/CA.pem" --output-document ~/.postgresql/root.crt && chmod 0600 ~/.postgresql/root.crt
          
          ./migrate -source file://migrations -database "postgres://$DB_USER:$DB_PASS@${{ vars.TESTING_DB_HOST }}:6432/auth?sslmode=verify-full&target_session_attrs=read-write&sslrootcert=/home/runner/.postgresql/root.crt" up

  build-testing:
    runs-on: ubuntu-latest
    needs: migrate-testing-up
    timeout-minutes: 10
    defaults:
      run:
        working-directory: backend/auth
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/codegen
        with:
          working-directory: backend/auth

      - name: Extract tag version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Setup yc
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -i /opt/yc -n
          echo '${{ secrets.YC_SERVICE_KEY }}' > sa-key.json
          /opt/yc/bin/yc config set folder-id b1ggapscf0p06cohndtt
          /opt/yc/bin/yc config set service-account-key sa-key.json

      - name: Login docker
        run: |
          echo $(/opt/yc/bin/yc iam create-token)|docker login --username iam --password-stdin cr.yandex

      - name: Build Docker image
        run: docker build -t cr.yandex/crpe9kgeql1v6b7gujfj/auth-testing:${{ env.RELEASE_VERSION }} --push . -f testing.Dockerfile

      - name: Generate docker-compose.yml with version
        run: |
          sed "s/{{AUTH_VERSION}}/${{ env.RELEASE_VERSION }}/g" ${{ github.workspace }}/backend/docker-compose.testing-template.yml > docker-compose.testing-generated.yml

      - name: Deploy to testing
        run: |
          /opt/yc/bin/yc compute instance-group add-metadata --name vm-testing --metadata-from-file docker-compose=docker-compose.testing-generated.yml


  publish-release:
    runs-on: ubuntu-latest
    needs: build-testing
    environment:
      name: Production
    steps:
      - name: Release
        uses: softprops/action-gh-release@v2