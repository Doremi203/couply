services:
  db:
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  payments:
    build:
      context: .
      dockerfile: payments/prod.Dockerfile
    environment:
      APP_ENV: tests
      CONFIGS_PATH: /app/configs
    ports:
      - "7005:7005"
      - "7006:7006"
    depends_on:
      db:
        condition: service_healthy

  blocker:
    build:
      context: .
      dockerfile: blocker/prod.Dockerfile
    environment:
      APP_ENV: tests
      CONFIGS_PATH: /app/configs
    ports:
      - "7003:7003"
      - "7004:7004"
    depends_on:
      db:
        condition: service_healthy

  matcher:
    build:
      context: .
      dockerfile: matcher/prod.Dockerfile
    environment:
      APP_ENV: tests
      CONFIGS_PATH: /app/configs
    ports:
      - "7001:7001"
      - "7002:7002"
    depends_on:
      db:
        condition: service_healthy

  auth:
    build:
      context: .
      dockerfile: auth/prod.Dockerfile
    environment:
      APP_ENV: tests
      CONFIGS_PATH: /app/configs
    ports:
      - "8080:8080"
      - "9090:9090"
    depends_on:
      db:
        condition: service_healthy

  migrate:
    image: golang
    entrypoint:
      - /bin/sh
      - -c
      - |
        go install github.com/pressly/goose/v3/cmd/goose@latest
        goose -dir /auth/migrations postgres 'postgres://user:pass@db:5432/auth?sslmode=disable' up
        goose -dir /notificator/migrations postgres 'postgres://user:pass@db:5432/notificator?sslmode=disable' up
        goose -dir /payments/migrations postgres 'postgres://user:pass@db:5432/payments?sslmode=disable' up
        goose -dir /matcher/migrations postgres 'postgres://user:pass@db:5432/matcher?sslmode=disable' up
        goose -dir /blocker/migrations postgres 'postgres://user:pass@db:5432/blocker?sslmode=disable' up
    volumes:
      - ./auth/migrations:/auth/migrations
      - ./notificator/migrations:/notificator/migrations
      - ./payments/migrations:/payments/migrations
      - ./matcher/migrations:/matcher/migrations
      - ./blocker/migrations:/blocker/migrations
    depends_on:
      db:
        condition: service_healthy