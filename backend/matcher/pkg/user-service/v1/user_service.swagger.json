{
  "swagger": "2.0",
  "info": {
    "title": "Приложение для знакомств. Сервис пользователей",
    "description": "Сервис пользователей для приложения, которое позволяет людям искать людей для знакомств",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "UserService"
    }
  ],
  "host": "127.0.0.1:7001",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/CreateUserV1": {
      "post": {
        "summary": "Создание пользователя",
        "description": "Принимает важные поля для создания пользователя",
        "operationId": "UserService_CreateUserV1",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/backendCreateUserV1Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backendCreateUserV1Request"
            }
          }
        ],
        "tags": [
          "UserService"
        ],
        "security": [
          {
            "api-token": []
          }
        ]
      }
    },
    "/v1/DeleteUserV1": {
      "post": {
        "summary": "Удаление пользователя",
        "description": "Принимает айди пользователя для полного удаления",
        "operationId": "UserService_DeleteUserV1",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/backendDeleteUserV1Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backendDeleteUserV1Request"
            }
          }
        ],
        "tags": [
          "UserService"
        ],
        "security": [
          {
            "api-token": []
          }
        ]
      }
    },
    "/v1/GetUserV1": {
      "post": {
        "summary": "Получение пользователя",
        "description": "Принимает айди пользователя для получения его данных",
        "operationId": "UserService_GetUserV1",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/backendGetUserV1Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backendGetUserV1Request"
            }
          }
        ],
        "tags": [
          "UserService"
        ],
        "security": [
          {
            "api-token": []
          }
        ]
      }
    },
    "/v1/UpdateUserV1": {
      "post": {
        "summary": "Обновление пользователя",
        "description": "Принимает важные поля для обновления пользователя",
        "operationId": "UserService_UpdateUserV1",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/backendUpdateUserV1Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backendUpdateUserV1Request"
            }
          }
        ],
        "tags": [
          "UserService"
        ],
        "security": [
          {
            "api-token": []
          }
        ]
      }
    }
  },
  "definitions": {
    "backendAlcohol": {
      "type": "string",
      "enum": [
        "ALCOHOL_UNSPECIFIED",
        "ALCOHOL_NEGATIVELY",
        "ALCOHOL_NEUTRALLY",
        "ALCOHOL_POSITIVELY"
      ],
      "default": "ALCOHOL_UNSPECIFIED"
    },
    "backendArt": {
      "type": "string",
      "enum": [
        "ART_UNSPECIFIED",
        "ART_PAINTING",
        "ART_PHOTOGRAPH",
        "ART_MUSIC",
        "ART_SINGING",
        "ART_WRITING",
        "ART_SCULPTURE",
        "ART_THEATER",
        "ART_CINEMA",
        "ART_NEEDLEWORK"
      ],
      "default": "ART_UNSPECIFIED"
    },
    "backendChildren": {
      "type": "string",
      "enum": [
        "CHILDREN_UNSPECIFIED",
        "CHILDREN_NO",
        "CHILDREN_NOT_YET",
        "CHILDREN_YES"
      ],
      "default": "CHILDREN_UNSPECIFIED"
    },
    "backendCreateUserV1Request": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "gender": {
          "$ref": "#/definitions/backendGender"
        },
        "location": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "goal": {
          "$ref": "#/definitions/backendGoal"
        },
        "interest": {
          "$ref": "#/definitions/backendInterest"
        },
        "zodiac": {
          "$ref": "#/definitions/backendZodiac"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "education": {
          "$ref": "#/definitions/backendEducation"
        },
        "children": {
          "$ref": "#/definitions/backendChildren"
        },
        "alcohol": {
          "$ref": "#/definitions/backendAlcohol"
        },
        "smoking": {
          "$ref": "#/definitions/backendSmoking"
        },
        "hidden": {
          "type": "boolean"
        },
        "verified": {
          "type": "boolean"
        },
        "photos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/backendPhoto"
          }
        }
      },
      "required": [
        "name",
        "age",
        "gender",
        "location",
        "hidden",
        "verified"
      ]
    },
    "backendCreateUserV1Response": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/backendUser"
        }
      }
    },
    "backendDeleteUserV1Request": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      },
      "required": [
        "id"
      ]
    },
    "backendDeleteUserV1Response": {
      "type": "object"
    },
    "backendEducation": {
      "type": "string",
      "enum": [
        "EDUCATION_UNSPECIFIED",
        "EDUCATION_SECONDARY",
        "EDUCATION_HIGHER",
        "EDUCATION_PHD"
      ],
      "default": "EDUCATION_UNSPECIFIED"
    },
    "backendGastronomy": {
      "type": "string",
      "enum": [
        "GASTRONOMY_UNSPECIFIED",
        "GASTRONOMY_COOKING",
        "GASTRONOMY_WINE_DEGUSTATION",
        "GASTRONOMY_BARS",
        "GASTRONOMY_COFFEE",
        "GASTRONOMY_TEA",
        "GASTRONOMY_VEGAN",
        "GASTRONOMY_FOOD_CRITIC",
        "GASTRONOMY_SUGAR_LOVER"
      ],
      "default": "GASTRONOMY_UNSPECIFIED"
    },
    "backendGender": {
      "type": "string",
      "enum": [
        "GENDER_UNSPECIFIED",
        "GENDER_MALE",
        "GENDER_FEMALE"
      ],
      "default": "GENDER_UNSPECIFIED"
    },
    "backendGetUserV1Request": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "backendGetUserV1Response": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/backendUser"
        }
      }
    },
    "backendGoal": {
      "type": "string",
      "enum": [
        "GOAL_UNSPECIFIED",
        "GOAL_DATING",
        "GOAL_RELATIONSHIP",
        "GOAL_FRIENDSHIP",
        "GOAL_JUST_CHATTING"
      ],
      "default": "GOAL_UNSPECIFIED"
    },
    "backendHobby": {
      "type": "string",
      "enum": [
        "HOBBY_UNSPECIFIED",
        "HOBBY_LITERATURE",
        "HOBBY_VIDEO_GAMES",
        "HOBBY_BOARD_GAMES",
        "HOBBY_TRAVELS",
        "HOBBY_PLANT_CULTIVATION",
        "HOBBY_FISHING",
        "HOBBY_DOG_WALKS",
        "HOBBY_CATS_LOVER",
        "HOBBY_CARS_AND_MOTORCYCLES",
        "HOBBY_CONCERTS"
      ],
      "default": "HOBBY_UNSPECIFIED"
    },
    "backendInterest": {
      "type": "object",
      "properties": {
        "sport": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/backendSport"
          }
        },
        "selfdevelopment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/backendSelfdevelopment"
          }
        },
        "art": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/backendArt"
          }
        },
        "social": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/backendSocial"
          }
        },
        "hobby": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/backendHobby"
          }
        },
        "gastronomy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/backendGastronomy"
          }
        }
      }
    },
    "backendPhoto": {
      "type": "object",
      "properties": {
        "orderNumber": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "uploadedAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "url",
        "mimeType"
      ]
    },
    "backendSelfdevelopment": {
      "type": "string",
      "enum": [
        "SELFDEVELOPMENT_UNSPECIFIED",
        "SELFDEVELOPMENT_LANGUAGES",
        "SELFDEVELOPMENT_LECTURES",
        "SELFDEVELOPMENT_ONLINE_COURSES",
        "SELFDEVELOPMENT_SELF_EDUCATION",
        "SELFDEVELOPMENT_MEDITATION",
        "SELFDEVELOPMENT_PSYCHOLOGY",
        "SELFDEVELOPMENT_PHILOSOPHY",
        "SELFDEVELOPMENT_HISTORY",
        "SELFDEVELOPMENT_TECHNOLOGY",
        "SELFDEVELOPMENT_READING"
      ],
      "default": "SELFDEVELOPMENT_UNSPECIFIED"
    },
    "backendSmoking": {
      "type": "string",
      "enum": [
        "SMOKING_UNSPECIFIED",
        "SMOKING_NEGATIVELY",
        "SMOKING_NEUTRALLY",
        "SMOKING_POSITIVELY"
      ],
      "default": "SMOKING_UNSPECIFIED"
    },
    "backendSocial": {
      "type": "string",
      "enum": [
        "SOCIAL_UNSPECIFIED",
        "SOCIAL_VOLUNTEERING",
        "SOCIAL_CHARITY",
        "SOCIAL_ECO_ACTIVISM",
        "SOCIAL_ELDERLY_CARE",
        "SOCIAL_CHILDCARE",
        "SOCIAL_ANIMAL_WELFARE"
      ],
      "default": "SOCIAL_UNSPECIFIED"
    },
    "backendSport": {
      "type": "string",
      "enum": [
        "SPORT_UNSPECIFIED",
        "SPORT_RUNNING",
        "SPORT_SWIMMING",
        "SPORT_YOGA",
        "SPORT_BYCICLE",
        "SPORT_GYM",
        "SPORT_SKIING",
        "SPORT_SNOWBOARDING",
        "SPORT_DANCING",
        "SPORT_MARTIAL_ARTS",
        "SPORT_SURFING",
        "SPORT_HIKING",
        "SPORT_TENNIS",
        "SPORT_CLIMBING"
      ],
      "default": "SPORT_UNSPECIFIED"
    },
    "backendUpdateUserV1Request": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "gender": {
          "$ref": "#/definitions/backendGender"
        },
        "location": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "goal": {
          "$ref": "#/definitions/backendGoal"
        },
        "interest": {
          "$ref": "#/definitions/backendInterest"
        },
        "zodiac": {
          "$ref": "#/definitions/backendZodiac"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "education": {
          "$ref": "#/definitions/backendEducation"
        },
        "children": {
          "$ref": "#/definitions/backendChildren"
        },
        "alcohol": {
          "$ref": "#/definitions/backendAlcohol"
        },
        "smoking": {
          "$ref": "#/definitions/backendSmoking"
        },
        "hidden": {
          "type": "boolean"
        },
        "verified": {
          "type": "boolean"
        },
        "photos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/backendPhoto"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "backendUpdateUserV1Response": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/backendUser"
        }
      }
    },
    "backendUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "gender": {
          "$ref": "#/definitions/backendGender"
        },
        "location": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "goal": {
          "$ref": "#/definitions/backendGoal"
        },
        "interest": {
          "$ref": "#/definitions/backendInterest"
        },
        "zodiac": {
          "$ref": "#/definitions/backendZodiac"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "education": {
          "$ref": "#/definitions/backendEducation"
        },
        "children": {
          "$ref": "#/definitions/backendChildren"
        },
        "alcohol": {
          "$ref": "#/definitions/backendAlcohol"
        },
        "smoking": {
          "$ref": "#/definitions/backendSmoking"
        },
        "hidden": {
          "type": "boolean"
        },
        "verified": {
          "type": "boolean"
        },
        "photos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/backendPhoto"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "backendZodiac": {
      "type": "string",
      "enum": [
        "ZODIAC_UNSPECIFIED",
        "ZODIAC_ARIES",
        "ZODIAC_TAURUS",
        "ZODIAC_GEMINI",
        "ZODIAC_CANCER",
        "ZODIAC_LEO",
        "ZODIAC_VIRGO",
        "ZODIAC_LIBRA",
        "ZODIAC_SCORPIO",
        "ZODIAC_SAGITTARIUS",
        "ZODIAC_CAPRICORN",
        "ZODIAC_AQUARIUS",
        "ZODIAC_PISCES"
      ],
      "default": "ZODIAC_UNSPECIFIED"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api-token": {
      "type": "apiKey",
      "description": "Токен авторизации",
      "name": "x-api-token",
      "in": "header"
    }
  }
}
