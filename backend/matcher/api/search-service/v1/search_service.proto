syntax = "proto3";

package matcher;

option go_package = "github.com/Doremi203/couply/backend/matcher/api/search-service/v1";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Приложение для знакомств. Сервис поиска";
    version: "1.0.0";
    description: "Сервис поиска для приложения, которое позволяет людям искать людей для знакомств";
  };
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "api-token";
      value: {
        in: IN_HEADER;
        type: TYPE_API_KEY;
        name: "x-api-token";
        description: "Токен авторизации";
      }
    }
  }
};

service SearchingService {
  rpc CreateFilterV1 (CreateFilterV1Request) returns (CreateFilterV1Response) {
    option (google.api.http) = {
      post: "/v1/CreateFilterV1"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Создание фильтра";
      description: "Принимает важные поля для создания фильтра";
      security: {
        security_requirement: {
          key: "api-token";
          value: {};
        }
      }
    };
  }
}

message CreateFilterV1Request {}

message CreateFilterV1Response {}

