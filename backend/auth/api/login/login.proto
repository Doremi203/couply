syntax = "proto3";

package login;

option go_package = "github.com/Doremi203/couply/backend/auth/api/login";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

service Login {
  rpc BasicLoginV1(BasicLoginRequestV1) returns (BasicLoginResponseV1) {
    option (google.api.http) = {
      post: "/v1/login/basic"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Вход с помощью почты/телефона и пароля";
      description: "Выдает токен пользователя в обмен на почту/телефон и пароль";
    };
  }

  rpc OAuthLoginV1(OAuthLoginV1Request) returns (OAuthLoginV1Response) {
    option (google.api.http) = {
      get: "/v1/login/oauth/{provider}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Redirect endpoint для OAuth провайдеров";
      description: "Выдает токен пользователя в обмен на access_token от OAuth провайдера";
    };
  }
}

message BasicLoginRequestV1 {
  string email = 1;
  string password = 2;
}

message BasicLoginResponseV1 {
  string token = 1;
  int32 expires_in = 2;
}

message OAuthLoginV1Request {
  string provider = 1;
  string access_token = 2;
  string token_type = 3;
  string expires_in = 4;
  string scope = 5;
  string state = 6;

  string error = 7;
  string error_description = 8;
  string error_uri = 9;
}

message OAuthLoginV1Response {
  string token = 1;
  int32 expires_in = 2;
}