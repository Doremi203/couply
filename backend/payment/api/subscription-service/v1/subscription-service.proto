syntax = "proto3";

package subscription_service.v1;

option go_package = "github.com/Doremi203/couply/backend/payment/gen/api/subscription-service/v1;subscription_service";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";
import "api/common/v1/common.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Приложение для знакомств. Сервис подписок";
    version: "1.0.0";
    description: "Сервис подписок для приложения, которое позволяет людям искать людей для знакомств";
  };
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "api-token";
      value: {
        in: IN_HEADER;
        type: TYPE_API_KEY;
        name: "x-api-token";
        description: "Токен авторизации";
      }
    }
    security: {
      key: "user-token";
      value: {
        in: IN_HEADER;
        type: TYPE_API_KEY;
        name: "user-token";
        description: "Токен пользователя для идентификации";
      }
    }
  }
};

service SubscriptionService {
  rpc CreateSubscriptionV1 (CreateSubscriptionV1Request) returns (CreateSubscriptionV1Response) {
    option (google.api.http) = {
      post: "/v1/subscriptions/create"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Создание подписки";
      description: "Принимает важные поля для создания подписки";
      security: {
        security_requirement: {
          key: "api-token";
          value: {};
        }
        security_requirement: {
          key: "user-token";
          value: {};
        }
      }
    };
  }
  rpc GetActiveSubscriptionV1 (GetActiveSubscriptionV1Request) returns (GetActiveSubscriptionV1Response) {
    option (google.api.http) = {
      post: "/v1/subscriptions/active/get"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Получение активной подписки";
      description: "Принимает важные поля для получения активной подписки";
      security: {
        security_requirement: {
          key: "api-token";
          value: {};
        }
        security_requirement: {
          key: "user-token";
          value: {};
        }
      }
    };
  }
}

message CreateSubscriptionV1Request {
  SubscriptionPlan plan = 2;
  bool auto_renew = 3;
}

message CreateSubscriptionV1Response {
  string subscription_id = 1;
  SubscriptionPlan plan = 2;
  SubscriptionStatus status = 3;
  bool auto_renew = 4;
  google.protobuf.Timestamp start_date = 5;
  google.protobuf.Timestamp end_date = 6;
  repeated string payment_ids = 7;
}

message GetActiveSubscriptionV1Request {}

message GetActiveSubscriptionV1Response {
  string subscription_id = 1;
  SubscriptionPlan plan = 2;
  SubscriptionStatus status = 3;
  bool auto_renew = 4;
  google.protobuf.Timestamp start_date = 5;
  google.protobuf.Timestamp end_date = 6;
  repeated string payment_ids = 7;
}

enum SubscriptionPlan {
  SUBSCRIPTION_PLAN_UNSPECIFIED = 0;
  SUBSCRIPTION_PLAN_MONTHLY = 1;
  SUBSCRIPTION_PLAN_SEMI_ANNUAL = 2;
  SUBSCRIPTION_PLAN_ANNUAL = 3;
}

enum SubscriptionStatus {
  SUBSCRIPTION_STATUS_UNSPECIFIED = 0;
  SUBSCRIPTION_STATUS_ACTIVE = 1;
  SUBSCRIPTION_STATUS_EXPIRED = 2;
  SUBSCRIPTION_STATUS_CANCELED = 3;
  SUBSCRIPTION_STATUS_PENDING_PAYMENT = 4;
}
