import { Settings, GpsFixed } from '@mui/icons-material';
import { Dialog, Button, Typography } from '@mui/material';
import { useState } from 'react';

const GeoLocationRequest = () => {
  const [showHelp, setShowHelp] = useState(false);
  const [isMobile, setIsMobile] = useState(false);
  const [isIOS, setIsIOS] = useState(false);

  const detectPlatform = () => {
    const userAgent = navigator.userAgent.toLowerCase();
    setIsMobile(/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent));
    setIsIOS(/iphone|ipad|ipod/.test(userAgent));
  };

  const handleGeoRequest = () => {
    detectPlatform();

    navigator.geolocation.getCurrentPosition(
      position => {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
        // console.log(position.coords);
      },
      error => {
        if (error.code === error.PERMISSION_DENIED) {
          setShowHelp(true);
        }
      },
      { enableHighAccuracy: true, timeout: 10000 },
    );
  };

  const getInstructions = () => {
    if (isIOS) {
      return [
        '1. –û—Ç–∫—Ä–æ–π—Ç–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"',
        '2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å"',
        '3. –í—ã–±–µ—Ä–∏—Ç–µ "–°–ª—É–∂–±—ã –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏"',
        '4. –í–∫–ª—é—á–∏—Ç–µ –¥–ª—è —ç—Ç–æ–≥–æ —Å–∞–π—Ç–∞',
      ];
    }

    if (isMobile) {
      return [
        '1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç—Ä–∏ —Ç–æ—á–∫–∏ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É',
        '2. –í—ã–±–µ—Ä–∏—Ç–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"',
        '3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"',
        '4. –í–∫–ª—é—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –¥–ª—è —ç—Ç–æ–≥–æ —Å–∞–π—Ç–∞',
      ];
    }

    return [
      '1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É –∑–∞–º–∫–∞ –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ',
      '2. –í—ã–±–µ—Ä–∏—Ç–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞"',
      '3. –ù–∞–π–¥–∏—Ç–µ –ø—É–Ω–∫—Ç "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"',
      '4. –í—ã–±–µ—Ä–∏—Ç–µ "–†–∞–∑—Ä–µ—à–∏—Ç—å"',
    ];
  };

  return (
    <div>
      <Button variant="contained" startIcon={<GpsFixed />} onClick={handleGeoRequest}>
        –†–∞–∑—Ä–µ—à–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
      </Button>

      <Dialog open={showHelp} onClose={() => setShowHelp(false)}>
        <div style={{ padding: '20px', maxWidth: '400px' }}>
          <Typography variant="h6" gutterBottom>
            üõ† –ö–∞–∫ –≤–∫–ª—é—á–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é:
          </Typography>

          {getInstructions().map((step, index) => (
            <Typography key={index} paragraph>
              {step}
            </Typography>
          ))}

          <div style={{ display: 'flex', gap: '10px', marginTop: '20px' }}>
            <Button
              variant="contained"
              color="primary"
              startIcon={<GpsFixed />}
              onClick={() => {
                setShowHelp(false);
                handleGeoRequest();
              }}
            >
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </Button>

            {isMobile && (
              <Button
                variant="outlined"
                startIcon={<Settings />}
                onClick={() => {
                  if (isIOS) {
                    window.location.href = 'App-Prefs:Privacy&path=LOCATION';
                  } else {
                    window.location.href = 'android.settings.LOCATION_SOURCE_SETTINGS';
                  }
                }}
              >
                –û—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
              </Button>
            )}
          </div>
        </div>
      </Dialog>
    </div>
  );
};

export default GeoLocationRequest;
